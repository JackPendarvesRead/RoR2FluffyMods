 private void ChestBehavior_ItemDrop(ILContext il)
        {
            var c = new ILCursor(il);
            c.GotoNext(x => x.MatchRet());
            c.Index += 3;
            c.EmitDelegate<Func<PickupIndex, PickupIndex>>((dropPickup) =>
            {
                if(dropPickup.itemIndex != ItemIndex.None)
                {
                    OnItemDropped.Invoke(this, new OnItemDroppedArgs { itemIndex = dropPickup.itemIndex });
                }
                return dropPickup;
            });
        }

        private void ShopTerminalBehavior_DropPickup(ILContext il)
        {
            var c = new ILCursor(il);
            c.GotoNext(
                x => x.MatchLdarg(0),
                x => x.MatchLdfld(out FieldReference fr1));
            Debug.Log(c);
            c.Index += 2;
            Debug.Log(c);
            c.EmitDelegate<Func<PickupIndex, PickupIndex>>((pickupIndex) =>
            {
                if (pickupIndex.itemIndex != ItemIndex.None)
                {
                    OnItemDropped.Invoke(this, new OnItemDroppedArgs { itemIndex = pickupIndex.itemIndex });
                }
                return pickupIndex;
            });
        }
