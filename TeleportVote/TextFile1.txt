private void RunStopWatch()
        {            
            Chat.AddMessage("RUNNING STOPWATCH!!!");
            StopWatchTaskIsRunning = true;
            while (StopWatchTaskIsRunning)
            {
                if(sw.ElapsedMilliseconds > TimeLimit + ExtraTimeWindow)
                {                   
                    Reset();
                    AddMessage($"Restriction reinstated. Too much time passed since restrictions lifted.", true);
                    return;
                }
                if (sw.ElapsedMilliseconds > TimeLimit + ExtraTimeWindow - 10000)
                {
                    AddMessage($"WARNING: Restrictions will be reinstated in {(TimeLimit+ExtraTimeWindow-sw.ElapsedMilliseconds)/1000}s if you do not proceed!", true);
                    Thread.Sleep(1000);
                }
                if (sw.ElapsedMilliseconds == TimeLimit)
                {
                    AddMessage($"Restrictions have been lifted. They will be reinstated in {ExtraTimeWindow/1000}s if you do not proceed.", true);
                    Thread.Sleep(100);
                }                
                if(sw.ElapsedMilliseconds % ExtraTimeWindow == 0 && sw.ElapsedMilliseconds > 10)
                {
                    AddMessage($"{(TimeLimit-sw.ElapsedMilliseconds)/1000}s until restrictions are lifted.", true);
                    Thread.Sleep(100);
                }
            }
        }


		#region ValidationLogic
        private bool CheckValidInteraction(string playerId)
        {
            bool broadcastThis = false;
            if (!ReadyPlayersList.Contains(playerId))
            {
                ReadyPlayersList.Add(playerId);
                broadcastThis = true;
            }

            if (ReadyPlayersList.Count >= NumberOfPlayers || sw.ElapsedMilliseconds >= TimeLimit)
            {
                Reset();
                AddMessage("Go go go go go!!!", true);
                return true;
            }
            else
            {
                if (!sw.IsRunning)
                {
                    sw.Start();
                    StopWatchTask = Task.Run(() => RunStopWatch());
                }
                Logger.LogInfo($"NumPlayers={NumberOfPlayers}, ReadyPlayers={ReadyPlayersList.Count}, TimeLeft={TimeRemaining}");
                AddMessage($"{ReadyPlayersList.Count}/{NumberOfPlayers} ready. Lifting restrictions in {TimeRemaining}s", broadcastThis);
                return false;
            }
        }

        
        #endregion